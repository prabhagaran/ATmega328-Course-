
0006b_Timer1_NormalMode_Basic_delay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000396  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000342  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000396  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003c8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000408  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006f1  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000666  00000000  00000000  00000b29  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000231  00000000  00000000  0000118f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  000013c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000372  00000000  00000000  00001404  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000036  00000000  00000000  00001776  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000017ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 67 00 	call	0xce	; 0xce <main>
  78:	0c 94 9f 01 	jmp	0x33e	; 0x33e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <setup_timer1>:

#define F_CPU 16000000 // Define the clock frequency

void setup_timer1() {
    // Set Timer1 in normal mode with a prescaler of 1024
    TCCR1B = (1 << CS12) | (1 << CS10); // Set prescaler to 1024
  80:	85 e0       	ldi	r24, 0x05	; 5
  82:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
  86:	08 95       	ret

00000088 <delay_ms>:
}

void delay_ms(uint16_t milliseconds) {
    // Calculate the number of timer ticks needed for the given milliseconds
    uint16_t ticks = (uint16_t)((float)milliseconds * (F_CPU / 1000.0) / 1024.0);
  88:	bc 01       	movw	r22, r24
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	0e 94 a4 00 	call	0x148	; 0x148 <__floatunsisf>
  92:	20 e0       	ldi	r18, 0x00	; 0
  94:	30 e0       	ldi	r19, 0x00	; 0
  96:	4a e7       	ldi	r20, 0x7A	; 122
  98:	56 e4       	ldi	r21, 0x46	; 70
  9a:	0e 94 0a 01 	call	0x214	; 0x214 <__mulsf3>
  9e:	20 e0       	ldi	r18, 0x00	; 0
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	40 e8       	ldi	r20, 0x80	; 128
  a4:	5a e3       	ldi	r21, 0x3A	; 58
  a6:	0e 94 0a 01 	call	0x214	; 0x214 <__mulsf3>
  aa:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfsi>

    // Set the initial timer value
    TCNT1 = 0;
  ae:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  b2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>

    // Wait until the timer overflows the required number of times
    while (TCNT1 < ticks) {}
  b6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
  ba:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  be:	86 17       	cp	r24, r22
  c0:	97 07       	cpc	r25, r23
  c2:	c8 f3       	brcs	.-14     	; 0xb6 <delay_ms+0x2e>

    // Reset the timer value for the next delay
    TCNT1 = 0;
  c4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  c8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
  cc:	08 95       	ret

000000ce <main>:
}

int main(void) {
    setup_timer1(); // Initialize Timer1
  ce:	0e 94 40 00 	call	0x80	; 0x80 <setup_timer1>
    DDRB |= (1 << PB5); // Set PB5 as output
  d2:	84 b1       	in	r24, 0x04	; 4
  d4:	80 62       	ori	r24, 0x20	; 32
  d6:	84 b9       	out	0x04, r24	; 4

    while (1) {
        // Your main code goes here
        PORTB ^= (1 << PB5); // Toggle PB5
  d8:	95 b1       	in	r25, 0x05	; 5
  da:	80 e2       	ldi	r24, 0x20	; 32
  dc:	89 27       	eor	r24, r25
  de:	85 b9       	out	0x05, r24	; 5

        // Example: Delay for 1000 milliseconds (1 second)
        delay_ms(1000);
  e0:	88 ee       	ldi	r24, 0xE8	; 232
  e2:	93 e0       	ldi	r25, 0x03	; 3
  e4:	0e 94 44 00 	call	0x88	; 0x88 <delay_ms>
  e8:	f7 cf       	rjmp	.-18     	; 0xd8 <main+0xa>

000000ea <__fixunssfsi>:
  ea:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <__fp_splitA>
  ee:	88 f0       	brcs	.+34     	; 0x112 <__fixunssfsi+0x28>
  f0:	9f 57       	subi	r25, 0x7F	; 127
  f2:	98 f0       	brcs	.+38     	; 0x11a <__fixunssfsi+0x30>
  f4:	b9 2f       	mov	r27, r25
  f6:	99 27       	eor	r25, r25
  f8:	b7 51       	subi	r27, 0x17	; 23
  fa:	b0 f0       	brcs	.+44     	; 0x128 <__fixunssfsi+0x3e>
  fc:	e1 f0       	breq	.+56     	; 0x136 <__fixunssfsi+0x4c>
  fe:	66 0f       	add	r22, r22
 100:	77 1f       	adc	r23, r23
 102:	88 1f       	adc	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	1a f0       	brmi	.+6      	; 0x10e <__fixunssfsi+0x24>
 108:	ba 95       	dec	r27
 10a:	c9 f7       	brne	.-14     	; 0xfe <__fixunssfsi+0x14>
 10c:	14 c0       	rjmp	.+40     	; 0x136 <__fixunssfsi+0x4c>
 10e:	b1 30       	cpi	r27, 0x01	; 1
 110:	91 f0       	breq	.+36     	; 0x136 <__fixunssfsi+0x4c>
 112:	0e 94 03 01 	call	0x206	; 0x206 <__fp_zero>
 116:	b1 e0       	ldi	r27, 0x01	; 1
 118:	08 95       	ret
 11a:	0c 94 03 01 	jmp	0x206	; 0x206 <__fp_zero>
 11e:	67 2f       	mov	r22, r23
 120:	78 2f       	mov	r23, r24
 122:	88 27       	eor	r24, r24
 124:	b8 5f       	subi	r27, 0xF8	; 248
 126:	39 f0       	breq	.+14     	; 0x136 <__fixunssfsi+0x4c>
 128:	b9 3f       	cpi	r27, 0xF9	; 249
 12a:	cc f3       	brlt	.-14     	; 0x11e <__fixunssfsi+0x34>
 12c:	86 95       	lsr	r24
 12e:	77 95       	ror	r23
 130:	67 95       	ror	r22
 132:	b3 95       	inc	r27
 134:	d9 f7       	brne	.-10     	; 0x12c <__fixunssfsi+0x42>
 136:	3e f4       	brtc	.+14     	; 0x146 <__fixunssfsi+0x5c>
 138:	90 95       	com	r25
 13a:	80 95       	com	r24
 13c:	70 95       	com	r23
 13e:	61 95       	neg	r22
 140:	7f 4f       	sbci	r23, 0xFF	; 255
 142:	8f 4f       	sbci	r24, 0xFF	; 255
 144:	9f 4f       	sbci	r25, 0xFF	; 255
 146:	08 95       	ret

00000148 <__floatunsisf>:
 148:	e8 94       	clt
 14a:	09 c0       	rjmp	.+18     	; 0x15e <__floatsisf+0x12>

0000014c <__floatsisf>:
 14c:	97 fb       	bst	r25, 7
 14e:	3e f4       	brtc	.+14     	; 0x15e <__floatsisf+0x12>
 150:	90 95       	com	r25
 152:	80 95       	com	r24
 154:	70 95       	com	r23
 156:	61 95       	neg	r22
 158:	7f 4f       	sbci	r23, 0xFF	; 255
 15a:	8f 4f       	sbci	r24, 0xFF	; 255
 15c:	9f 4f       	sbci	r25, 0xFF	; 255
 15e:	99 23       	and	r25, r25
 160:	a9 f0       	breq	.+42     	; 0x18c <__floatsisf+0x40>
 162:	f9 2f       	mov	r31, r25
 164:	96 e9       	ldi	r25, 0x96	; 150
 166:	bb 27       	eor	r27, r27
 168:	93 95       	inc	r25
 16a:	f6 95       	lsr	r31
 16c:	87 95       	ror	r24
 16e:	77 95       	ror	r23
 170:	67 95       	ror	r22
 172:	b7 95       	ror	r27
 174:	f1 11       	cpse	r31, r1
 176:	f8 cf       	rjmp	.-16     	; 0x168 <__floatsisf+0x1c>
 178:	fa f4       	brpl	.+62     	; 0x1b8 <__floatsisf+0x6c>
 17a:	bb 0f       	add	r27, r27
 17c:	11 f4       	brne	.+4      	; 0x182 <__floatsisf+0x36>
 17e:	60 ff       	sbrs	r22, 0
 180:	1b c0       	rjmp	.+54     	; 0x1b8 <__floatsisf+0x6c>
 182:	6f 5f       	subi	r22, 0xFF	; 255
 184:	7f 4f       	sbci	r23, 0xFF	; 255
 186:	8f 4f       	sbci	r24, 0xFF	; 255
 188:	9f 4f       	sbci	r25, 0xFF	; 255
 18a:	16 c0       	rjmp	.+44     	; 0x1b8 <__floatsisf+0x6c>
 18c:	88 23       	and	r24, r24
 18e:	11 f0       	breq	.+4      	; 0x194 <__floatsisf+0x48>
 190:	96 e9       	ldi	r25, 0x96	; 150
 192:	11 c0       	rjmp	.+34     	; 0x1b6 <__floatsisf+0x6a>
 194:	77 23       	and	r23, r23
 196:	21 f0       	breq	.+8      	; 0x1a0 <__floatsisf+0x54>
 198:	9e e8       	ldi	r25, 0x8E	; 142
 19a:	87 2f       	mov	r24, r23
 19c:	76 2f       	mov	r23, r22
 19e:	05 c0       	rjmp	.+10     	; 0x1aa <__floatsisf+0x5e>
 1a0:	66 23       	and	r22, r22
 1a2:	71 f0       	breq	.+28     	; 0x1c0 <__floatsisf+0x74>
 1a4:	96 e8       	ldi	r25, 0x86	; 134
 1a6:	86 2f       	mov	r24, r22
 1a8:	70 e0       	ldi	r23, 0x00	; 0
 1aa:	60 e0       	ldi	r22, 0x00	; 0
 1ac:	2a f0       	brmi	.+10     	; 0x1b8 <__floatsisf+0x6c>
 1ae:	9a 95       	dec	r25
 1b0:	66 0f       	add	r22, r22
 1b2:	77 1f       	adc	r23, r23
 1b4:	88 1f       	adc	r24, r24
 1b6:	da f7       	brpl	.-10     	; 0x1ae <__floatsisf+0x62>
 1b8:	88 0f       	add	r24, r24
 1ba:	96 95       	lsr	r25
 1bc:	87 95       	ror	r24
 1be:	97 f9       	bld	r25, 7
 1c0:	08 95       	ret

000001c2 <__fp_split3>:
 1c2:	57 fd       	sbrc	r21, 7
 1c4:	90 58       	subi	r25, 0x80	; 128
 1c6:	44 0f       	add	r20, r20
 1c8:	55 1f       	adc	r21, r21
 1ca:	59 f0       	breq	.+22     	; 0x1e2 <__fp_splitA+0x10>
 1cc:	5f 3f       	cpi	r21, 0xFF	; 255
 1ce:	71 f0       	breq	.+28     	; 0x1ec <__fp_splitA+0x1a>
 1d0:	47 95       	ror	r20

000001d2 <__fp_splitA>:
 1d2:	88 0f       	add	r24, r24
 1d4:	97 fb       	bst	r25, 7
 1d6:	99 1f       	adc	r25, r25
 1d8:	61 f0       	breq	.+24     	; 0x1f2 <__fp_splitA+0x20>
 1da:	9f 3f       	cpi	r25, 0xFF	; 255
 1dc:	79 f0       	breq	.+30     	; 0x1fc <__fp_splitA+0x2a>
 1de:	87 95       	ror	r24
 1e0:	08 95       	ret
 1e2:	12 16       	cp	r1, r18
 1e4:	13 06       	cpc	r1, r19
 1e6:	14 06       	cpc	r1, r20
 1e8:	55 1f       	adc	r21, r21
 1ea:	f2 cf       	rjmp	.-28     	; 0x1d0 <__fp_split3+0xe>
 1ec:	46 95       	lsr	r20
 1ee:	f1 df       	rcall	.-30     	; 0x1d2 <__fp_splitA>
 1f0:	08 c0       	rjmp	.+16     	; 0x202 <__fp_splitA+0x30>
 1f2:	16 16       	cp	r1, r22
 1f4:	17 06       	cpc	r1, r23
 1f6:	18 06       	cpc	r1, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	f1 cf       	rjmp	.-30     	; 0x1de <__fp_splitA+0xc>
 1fc:	86 95       	lsr	r24
 1fe:	71 05       	cpc	r23, r1
 200:	61 05       	cpc	r22, r1
 202:	08 94       	sec
 204:	08 95       	ret

00000206 <__fp_zero>:
 206:	e8 94       	clt

00000208 <__fp_szero>:
 208:	bb 27       	eor	r27, r27
 20a:	66 27       	eor	r22, r22
 20c:	77 27       	eor	r23, r23
 20e:	cb 01       	movw	r24, r22
 210:	97 f9       	bld	r25, 7
 212:	08 95       	ret

00000214 <__mulsf3>:
 214:	0e 94 1d 01 	call	0x23a	; 0x23a <__mulsf3x>
 218:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__fp_round>
 21c:	0e 94 80 01 	call	0x300	; 0x300 <__fp_pscA>
 220:	38 f0       	brcs	.+14     	; 0x230 <__mulsf3+0x1c>
 222:	0e 94 87 01 	call	0x30e	; 0x30e <__fp_pscB>
 226:	20 f0       	brcs	.+8      	; 0x230 <__mulsf3+0x1c>
 228:	95 23       	and	r25, r21
 22a:	11 f0       	breq	.+4      	; 0x230 <__mulsf3+0x1c>
 22c:	0c 94 77 01 	jmp	0x2ee	; 0x2ee <__fp_inf>
 230:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__fp_nan>
 234:	11 24       	eor	r1, r1
 236:	0c 94 04 01 	jmp	0x208	; 0x208 <__fp_szero>

0000023a <__mulsf3x>:
 23a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <__fp_split3>
 23e:	70 f3       	brcs	.-36     	; 0x21c <__mulsf3+0x8>

00000240 <__mulsf3_pse>:
 240:	95 9f       	mul	r25, r21
 242:	c1 f3       	breq	.-16     	; 0x234 <__mulsf3+0x20>
 244:	95 0f       	add	r25, r21
 246:	50 e0       	ldi	r21, 0x00	; 0
 248:	55 1f       	adc	r21, r21
 24a:	62 9f       	mul	r22, r18
 24c:	f0 01       	movw	r30, r0
 24e:	72 9f       	mul	r23, r18
 250:	bb 27       	eor	r27, r27
 252:	f0 0d       	add	r31, r0
 254:	b1 1d       	adc	r27, r1
 256:	63 9f       	mul	r22, r19
 258:	aa 27       	eor	r26, r26
 25a:	f0 0d       	add	r31, r0
 25c:	b1 1d       	adc	r27, r1
 25e:	aa 1f       	adc	r26, r26
 260:	64 9f       	mul	r22, r20
 262:	66 27       	eor	r22, r22
 264:	b0 0d       	add	r27, r0
 266:	a1 1d       	adc	r26, r1
 268:	66 1f       	adc	r22, r22
 26a:	82 9f       	mul	r24, r18
 26c:	22 27       	eor	r18, r18
 26e:	b0 0d       	add	r27, r0
 270:	a1 1d       	adc	r26, r1
 272:	62 1f       	adc	r22, r18
 274:	73 9f       	mul	r23, r19
 276:	b0 0d       	add	r27, r0
 278:	a1 1d       	adc	r26, r1
 27a:	62 1f       	adc	r22, r18
 27c:	83 9f       	mul	r24, r19
 27e:	a0 0d       	add	r26, r0
 280:	61 1d       	adc	r22, r1
 282:	22 1f       	adc	r18, r18
 284:	74 9f       	mul	r23, r20
 286:	33 27       	eor	r19, r19
 288:	a0 0d       	add	r26, r0
 28a:	61 1d       	adc	r22, r1
 28c:	23 1f       	adc	r18, r19
 28e:	84 9f       	mul	r24, r20
 290:	60 0d       	add	r22, r0
 292:	21 1d       	adc	r18, r1
 294:	82 2f       	mov	r24, r18
 296:	76 2f       	mov	r23, r22
 298:	6a 2f       	mov	r22, r26
 29a:	11 24       	eor	r1, r1
 29c:	9f 57       	subi	r25, 0x7F	; 127
 29e:	50 40       	sbci	r21, 0x00	; 0
 2a0:	9a f0       	brmi	.+38     	; 0x2c8 <__mulsf3_pse+0x88>
 2a2:	f1 f0       	breq	.+60     	; 0x2e0 <__mulsf3_pse+0xa0>
 2a4:	88 23       	and	r24, r24
 2a6:	4a f0       	brmi	.+18     	; 0x2ba <__mulsf3_pse+0x7a>
 2a8:	ee 0f       	add	r30, r30
 2aa:	ff 1f       	adc	r31, r31
 2ac:	bb 1f       	adc	r27, r27
 2ae:	66 1f       	adc	r22, r22
 2b0:	77 1f       	adc	r23, r23
 2b2:	88 1f       	adc	r24, r24
 2b4:	91 50       	subi	r25, 0x01	; 1
 2b6:	50 40       	sbci	r21, 0x00	; 0
 2b8:	a9 f7       	brne	.-22     	; 0x2a4 <__mulsf3_pse+0x64>
 2ba:	9e 3f       	cpi	r25, 0xFE	; 254
 2bc:	51 05       	cpc	r21, r1
 2be:	80 f0       	brcs	.+32     	; 0x2e0 <__mulsf3_pse+0xa0>
 2c0:	0c 94 77 01 	jmp	0x2ee	; 0x2ee <__fp_inf>
 2c4:	0c 94 04 01 	jmp	0x208	; 0x208 <__fp_szero>
 2c8:	5f 3f       	cpi	r21, 0xFF	; 255
 2ca:	e4 f3       	brlt	.-8      	; 0x2c4 <__mulsf3_pse+0x84>
 2cc:	98 3e       	cpi	r25, 0xE8	; 232
 2ce:	d4 f3       	brlt	.-12     	; 0x2c4 <__mulsf3_pse+0x84>
 2d0:	86 95       	lsr	r24
 2d2:	77 95       	ror	r23
 2d4:	67 95       	ror	r22
 2d6:	b7 95       	ror	r27
 2d8:	f7 95       	ror	r31
 2da:	e7 95       	ror	r30
 2dc:	9f 5f       	subi	r25, 0xFF	; 255
 2de:	c1 f7       	brne	.-16     	; 0x2d0 <__mulsf3_pse+0x90>
 2e0:	fe 2b       	or	r31, r30
 2e2:	88 0f       	add	r24, r24
 2e4:	91 1d       	adc	r25, r1
 2e6:	96 95       	lsr	r25
 2e8:	87 95       	ror	r24
 2ea:	97 f9       	bld	r25, 7
 2ec:	08 95       	ret

000002ee <__fp_inf>:
 2ee:	97 f9       	bld	r25, 7
 2f0:	9f 67       	ori	r25, 0x7F	; 127
 2f2:	80 e8       	ldi	r24, 0x80	; 128
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	60 e0       	ldi	r22, 0x00	; 0
 2f8:	08 95       	ret

000002fa <__fp_nan>:
 2fa:	9f ef       	ldi	r25, 0xFF	; 255
 2fc:	80 ec       	ldi	r24, 0xC0	; 192
 2fe:	08 95       	ret

00000300 <__fp_pscA>:
 300:	00 24       	eor	r0, r0
 302:	0a 94       	dec	r0
 304:	16 16       	cp	r1, r22
 306:	17 06       	cpc	r1, r23
 308:	18 06       	cpc	r1, r24
 30a:	09 06       	cpc	r0, r25
 30c:	08 95       	ret

0000030e <__fp_pscB>:
 30e:	00 24       	eor	r0, r0
 310:	0a 94       	dec	r0
 312:	12 16       	cp	r1, r18
 314:	13 06       	cpc	r1, r19
 316:	14 06       	cpc	r1, r20
 318:	05 06       	cpc	r0, r21
 31a:	08 95       	ret

0000031c <__fp_round>:
 31c:	09 2e       	mov	r0, r25
 31e:	03 94       	inc	r0
 320:	00 0c       	add	r0, r0
 322:	11 f4       	brne	.+4      	; 0x328 <__fp_round+0xc>
 324:	88 23       	and	r24, r24
 326:	52 f0       	brmi	.+20     	; 0x33c <__fp_round+0x20>
 328:	bb 0f       	add	r27, r27
 32a:	40 f4       	brcc	.+16     	; 0x33c <__fp_round+0x20>
 32c:	bf 2b       	or	r27, r31
 32e:	11 f4       	brne	.+4      	; 0x334 <__fp_round+0x18>
 330:	60 ff       	sbrs	r22, 0
 332:	04 c0       	rjmp	.+8      	; 0x33c <__fp_round+0x20>
 334:	6f 5f       	subi	r22, 0xFF	; 255
 336:	7f 4f       	sbci	r23, 0xFF	; 255
 338:	8f 4f       	sbci	r24, 0xFF	; 255
 33a:	9f 4f       	sbci	r25, 0xFF	; 255
 33c:	08 95       	ret

0000033e <_exit>:
 33e:	f8 94       	cli

00000340 <__stop_program>:
 340:	ff cf       	rjmp	.-2      	; 0x340 <__stop_program>
