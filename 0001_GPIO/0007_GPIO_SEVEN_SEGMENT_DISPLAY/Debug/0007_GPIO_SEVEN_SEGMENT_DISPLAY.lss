
0007_GPIO_SEVEN_SEGMENT_DISPLAY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002a6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002fa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000032c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000036c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000097b  00000000  00000000  00000394  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000683  00000000  00000000  00000d0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000054d  00000000  00000000  00001392  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000018e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000397  00000000  00000000  00001914  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002d0  00000000  00000000  00001cab  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001f7b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 47 00 	call	0x8e	; 0x8e <main>
  78:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <all_segment_off>:

// Function to turn off all segments of the seven-segment display
void all_segment_off(void)
{
    // Turn off all segments by setting their corresponding pins high
    PORTD |= (1U << SEG_A_PIN) | (1U <<SEG_B_PIN) | (1U << SEG_C_PIN) | (1U << SEG_D_PIN) | (1U << SEG_E_PIN) | (1U << SEG_F_PIN);
  80:	8b b1       	in	r24, 0x0b	; 11
  82:	8c 6f       	ori	r24, 0xFC	; 252
  84:	8b b9       	out	0x0b, r24	; 11
    PORTB |= (1U << SEG_G_PIN) | (1U << SEG_DP_PIN);
  86:	85 b1       	in	r24, 0x05	; 5
  88:	83 60       	ori	r24, 0x03	; 3
  8a:	85 b9       	out	0x05, r24	; 5
  8c:	08 95       	ret

0000008e <main>:
}

int main(void)
{
    // Configure the pins connected to the segments of the seven-segment display as output
    DDRD |= (1U << SEG_A_PIN) | (1U << SEG_B_PIN) | (1U << SEG_C_PIN) | (1U << SEG_D_PIN) | (1U << SEG_E_PIN) | (1U << SEG_F_PIN);
  8e:	8a b1       	in	r24, 0x0a	; 10
  90:	8c 6f       	ori	r24, 0xFC	; 252
  92:	8a b9       	out	0x0a, r24	; 10
    DDRB |= (1U << SEG_G_PIN) | (1U << SEG_DP_PIN);
  94:	84 b1       	in	r24, 0x04	; 4
  96:	83 60       	ori	r24, 0x03	; 3
  98:	84 b9       	out	0x04, r24	; 4

    // Turn off all segments initially
    all_segment_off();
  9a:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>
    while (1)
    {
        // Display digits 0 through 9 sequentially with a delay of 1000 milliseconds (1 second) between each digit
        
        // 0
        PORTD &= ~(1U << SEG_A_PIN);
  9e:	8b b1       	in	r24, 0x0b	; 11
  a0:	8b 7f       	andi	r24, 0xFB	; 251
  a2:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_B_PIN);
  a4:	8b b1       	in	r24, 0x0b	; 11
  a6:	87 7f       	andi	r24, 0xF7	; 247
  a8:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_C_PIN);
  aa:	8b b1       	in	r24, 0x0b	; 11
  ac:	8f 7e       	andi	r24, 0xEF	; 239
  ae:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_D_PIN);
  b0:	8b b1       	in	r24, 0x0b	; 11
  b2:	8f 7d       	andi	r24, 0xDF	; 223
  b4:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_E_PIN);
  b6:	8b b1       	in	r24, 0x0b	; 11
  b8:	8f 7b       	andi	r24, 0xBF	; 191
  ba:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_F_PIN);
  bc:	8b b1       	in	r24, 0x0b	; 11
  be:	8f 77       	andi	r24, 0x7F	; 127
  c0:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	2f ef       	ldi	r18, 0xFF	; 255
  c4:	83 ed       	ldi	r24, 0xD3	; 211
  c6:	90 e3       	ldi	r25, 0x30	; 48
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	90 40       	sbci	r25, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x3a>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x44>
  d2:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
  d4:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>

        // 1
        PORTD &= ~(1U << SEG_B_PIN);
  d8:	8b b1       	in	r24, 0x0b	; 11
  da:	87 7f       	andi	r24, 0xF7	; 247
  dc:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_C_PIN);
  de:	8b b1       	in	r24, 0x0b	; 11
  e0:	8f 7e       	andi	r24, 0xEF	; 239
  e2:	8b b9       	out	0x0b, r24	; 11
  e4:	2f ef       	ldi	r18, 0xFF	; 255
  e6:	83 ed       	ldi	r24, 0xD3	; 211
  e8:	90 e3       	ldi	r25, 0x30	; 48
  ea:	21 50       	subi	r18, 0x01	; 1
  ec:	80 40       	sbci	r24, 0x00	; 0
  ee:	90 40       	sbci	r25, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x5c>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x66>
  f4:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
  f6:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>

        // 2
        PORTD &= ~(1U << SEG_A_PIN);
  fa:	8b b1       	in	r24, 0x0b	; 11
  fc:	8b 7f       	andi	r24, 0xFB	; 251
  fe:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_B_PIN);
 100:	8b b1       	in	r24, 0x0b	; 11
 102:	87 7f       	andi	r24, 0xF7	; 247
 104:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_D_PIN);
 106:	8b b1       	in	r24, 0x0b	; 11
 108:	8f 7d       	andi	r24, 0xDF	; 223
 10a:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_E_PIN);
 10c:	8b b1       	in	r24, 0x0b	; 11
 10e:	8f 7b       	andi	r24, 0xBF	; 191
 110:	8b b9       	out	0x0b, r24	; 11
        PORTB &= ~(1U << SEG_G_PIN);
 112:	85 b1       	in	r24, 0x05	; 5
 114:	8e 7f       	andi	r24, 0xFE	; 254
 116:	85 b9       	out	0x05, r24	; 5
 118:	2f ef       	ldi	r18, 0xFF	; 255
 11a:	83 ed       	ldi	r24, 0xD3	; 211
 11c:	90 e3       	ldi	r25, 0x30	; 48
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0x90>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0x9a>
 128:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
 12a:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>

        // 3
        PORTD &= ~(1U << SEG_A_PIN);
 12e:	8b b1       	in	r24, 0x0b	; 11
 130:	8b 7f       	andi	r24, 0xFB	; 251
 132:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_B_PIN);
 134:	8b b1       	in	r24, 0x0b	; 11
 136:	87 7f       	andi	r24, 0xF7	; 247
 138:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_C_PIN);
 13a:	8b b1       	in	r24, 0x0b	; 11
 13c:	8f 7e       	andi	r24, 0xEF	; 239
 13e:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_D_PIN);
 140:	8b b1       	in	r24, 0x0b	; 11
 142:	8f 7d       	andi	r24, 0xDF	; 223
 144:	8b b9       	out	0x0b, r24	; 11
        PORTB &= ~(1U << SEG_G_PIN);
 146:	85 b1       	in	r24, 0x05	; 5
 148:	8e 7f       	andi	r24, 0xFE	; 254
 14a:	85 b9       	out	0x05, r24	; 5
 14c:	2f ef       	ldi	r18, 0xFF	; 255
 14e:	83 ed       	ldi	r24, 0xD3	; 211
 150:	90 e3       	ldi	r25, 0x30	; 48
 152:	21 50       	subi	r18, 0x01	; 1
 154:	80 40       	sbci	r24, 0x00	; 0
 156:	90 40       	sbci	r25, 0x00	; 0
 158:	e1 f7       	brne	.-8      	; 0x152 <main+0xc4>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <main+0xce>
 15c:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
 15e:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>

        // 4
        PORTD &= ~(1U << SEG_B_PIN);
 162:	8b b1       	in	r24, 0x0b	; 11
 164:	87 7f       	andi	r24, 0xF7	; 247
 166:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_C_PIN);
 168:	8b b1       	in	r24, 0x0b	; 11
 16a:	8f 7e       	andi	r24, 0xEF	; 239
 16c:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_F_PIN);
 16e:	8b b1       	in	r24, 0x0b	; 11
 170:	8f 77       	andi	r24, 0x7F	; 127
 172:	8b b9       	out	0x0b, r24	; 11
        PORTB &= ~(1U << SEG_G_PIN);
 174:	85 b1       	in	r24, 0x05	; 5
 176:	8e 7f       	andi	r24, 0xFE	; 254
 178:	85 b9       	out	0x05, r24	; 5
 17a:	2f ef       	ldi	r18, 0xFF	; 255
 17c:	83 ed       	ldi	r24, 0xD3	; 211
 17e:	90 e3       	ldi	r25, 0x30	; 48
 180:	21 50       	subi	r18, 0x01	; 1
 182:	80 40       	sbci	r24, 0x00	; 0
 184:	90 40       	sbci	r25, 0x00	; 0
 186:	e1 f7       	brne	.-8      	; 0x180 <main+0xf2>
 188:	00 c0       	rjmp	.+0      	; 0x18a <main+0xfc>
 18a:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
 18c:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>

        // 5
        PORTD &= ~(1U << SEG_A_PIN);
 190:	8b b1       	in	r24, 0x0b	; 11
 192:	8b 7f       	andi	r24, 0xFB	; 251
 194:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_C_PIN);
 196:	8b b1       	in	r24, 0x0b	; 11
 198:	8f 7e       	andi	r24, 0xEF	; 239
 19a:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_D_PIN);
 19c:	8b b1       	in	r24, 0x0b	; 11
 19e:	8f 7d       	andi	r24, 0xDF	; 223
 1a0:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_F_PIN);
 1a2:	8b b1       	in	r24, 0x0b	; 11
 1a4:	8f 77       	andi	r24, 0x7F	; 127
 1a6:	8b b9       	out	0x0b, r24	; 11
        PORTB &= ~(1U << SEG_G_PIN);
 1a8:	85 b1       	in	r24, 0x05	; 5
 1aa:	8e 7f       	andi	r24, 0xFE	; 254
 1ac:	85 b9       	out	0x05, r24	; 5
 1ae:	2f ef       	ldi	r18, 0xFF	; 255
 1b0:	83 ed       	ldi	r24, 0xD3	; 211
 1b2:	90 e3       	ldi	r25, 0x30	; 48
 1b4:	21 50       	subi	r18, 0x01	; 1
 1b6:	80 40       	sbci	r24, 0x00	; 0
 1b8:	90 40       	sbci	r25, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <main+0x126>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <main+0x130>
 1be:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
 1c0:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>

        // 6
        PORTD &= ~(1U << SEG_A_PIN);
 1c4:	8b b1       	in	r24, 0x0b	; 11
 1c6:	8b 7f       	andi	r24, 0xFB	; 251
 1c8:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_C_PIN);
 1ca:	8b b1       	in	r24, 0x0b	; 11
 1cc:	8f 7e       	andi	r24, 0xEF	; 239
 1ce:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_D_PIN);
 1d0:	8b b1       	in	r24, 0x0b	; 11
 1d2:	8f 7d       	andi	r24, 0xDF	; 223
 1d4:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_E_PIN);
 1d6:	8b b1       	in	r24, 0x0b	; 11
 1d8:	8f 7b       	andi	r24, 0xBF	; 191
 1da:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_F_PIN);
 1dc:	8b b1       	in	r24, 0x0b	; 11
 1de:	8f 77       	andi	r24, 0x7F	; 127
 1e0:	8b b9       	out	0x0b, r24	; 11
        PORTB &= ~(1U << SEG_G_PIN);
 1e2:	85 b1       	in	r24, 0x05	; 5
 1e4:	8e 7f       	andi	r24, 0xFE	; 254
 1e6:	85 b9       	out	0x05, r24	; 5
 1e8:	2f ef       	ldi	r18, 0xFF	; 255
 1ea:	83 ed       	ldi	r24, 0xD3	; 211
 1ec:	90 e3       	ldi	r25, 0x30	; 48
 1ee:	21 50       	subi	r18, 0x01	; 1
 1f0:	80 40       	sbci	r24, 0x00	; 0
 1f2:	90 40       	sbci	r25, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <main+0x160>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <main+0x16a>
 1f8:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
 1fa:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>

        // 7
        PORTD &= ~(1U << SEG_A_PIN);
 1fe:	8b b1       	in	r24, 0x0b	; 11
 200:	8b 7f       	andi	r24, 0xFB	; 251
 202:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_B_PIN);
 204:	8b b1       	in	r24, 0x0b	; 11
 206:	87 7f       	andi	r24, 0xF7	; 247
 208:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_C_PIN);
 20a:	8b b1       	in	r24, 0x0b	; 11
 20c:	8f 7e       	andi	r24, 0xEF	; 239
 20e:	8b b9       	out	0x0b, r24	; 11
 210:	2f ef       	ldi	r18, 0xFF	; 255
 212:	83 ed       	ldi	r24, 0xD3	; 211
 214:	90 e3       	ldi	r25, 0x30	; 48
 216:	21 50       	subi	r18, 0x01	; 1
 218:	80 40       	sbci	r24, 0x00	; 0
 21a:	90 40       	sbci	r25, 0x00	; 0
 21c:	e1 f7       	brne	.-8      	; 0x216 <main+0x188>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <main+0x192>
 220:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
 222:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>

        // 8
        PORTD &= ~(1U << SEG_A_PIN);
 226:	8b b1       	in	r24, 0x0b	; 11
 228:	8b 7f       	andi	r24, 0xFB	; 251
 22a:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_B_PIN);
 22c:	8b b1       	in	r24, 0x0b	; 11
 22e:	87 7f       	andi	r24, 0xF7	; 247
 230:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_C_PIN);
 232:	8b b1       	in	r24, 0x0b	; 11
 234:	8f 7e       	andi	r24, 0xEF	; 239
 236:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_D_PIN);
 238:	8b b1       	in	r24, 0x0b	; 11
 23a:	8f 7d       	andi	r24, 0xDF	; 223
 23c:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_E_PIN);
 23e:	8b b1       	in	r24, 0x0b	; 11
 240:	8f 7b       	andi	r24, 0xBF	; 191
 242:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_F_PIN);
 244:	8b b1       	in	r24, 0x0b	; 11
 246:	8f 77       	andi	r24, 0x7F	; 127
 248:	8b b9       	out	0x0b, r24	; 11
        PORTB &= ~(1U << SEG_G_PIN);
 24a:	85 b1       	in	r24, 0x05	; 5
 24c:	8e 7f       	andi	r24, 0xFE	; 254
 24e:	85 b9       	out	0x05, r24	; 5
 250:	2f ef       	ldi	r18, 0xFF	; 255
 252:	83 ed       	ldi	r24, 0xD3	; 211
 254:	90 e3       	ldi	r25, 0x30	; 48
 256:	21 50       	subi	r18, 0x01	; 1
 258:	80 40       	sbci	r24, 0x00	; 0
 25a:	90 40       	sbci	r25, 0x00	; 0
 25c:	e1 f7       	brne	.-8      	; 0x256 <main+0x1c8>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <main+0x1d2>
 260:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
 262:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>

        // 9
        PORTD &= ~(1U << SEG_A_PIN);
 266:	8b b1       	in	r24, 0x0b	; 11
 268:	8b 7f       	andi	r24, 0xFB	; 251
 26a:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_B_PIN);
 26c:	8b b1       	in	r24, 0x0b	; 11
 26e:	87 7f       	andi	r24, 0xF7	; 247
 270:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_C_PIN);
 272:	8b b1       	in	r24, 0x0b	; 11
 274:	8f 7e       	andi	r24, 0xEF	; 239
 276:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_D_PIN);
 278:	8b b1       	in	r24, 0x0b	; 11
 27a:	8f 7d       	andi	r24, 0xDF	; 223
 27c:	8b b9       	out	0x0b, r24	; 11
        PORTD &= ~(1U << SEG_F_PIN);
 27e:	8b b1       	in	r24, 0x0b	; 11
 280:	8f 77       	andi	r24, 0x7F	; 127
 282:	8b b9       	out	0x0b, r24	; 11
        PORTB &= ~(1U << SEG_G_PIN);
 284:	85 b1       	in	r24, 0x05	; 5
 286:	8e 7f       	andi	r24, 0xFE	; 254
 288:	85 b9       	out	0x05, r24	; 5
 28a:	2f ef       	ldi	r18, 0xFF	; 255
 28c:	83 ed       	ldi	r24, 0xD3	; 211
 28e:	90 e3       	ldi	r25, 0x30	; 48
 290:	21 50       	subi	r18, 0x01	; 1
 292:	80 40       	sbci	r24, 0x00	; 0
 294:	90 40       	sbci	r25, 0x00	; 0
 296:	e1 f7       	brne	.-8      	; 0x290 <main+0x202>
 298:	00 c0       	rjmp	.+0      	; 0x29a <main+0x20c>
 29a:	00 00       	nop
        _delay_ms(1000);
        all_segment_off();
 29c:	0e 94 40 00 	call	0x80	; 0x80 <all_segment_off>
 2a0:	fe ce       	rjmp	.-516    	; 0x9e <main+0x10>

000002a2 <_exit>:
 2a2:	f8 94       	cli

000002a4 <__stop_program>:
 2a4:	ff cf       	rjmp	.-2      	; 0x2a4 <__stop_program>
