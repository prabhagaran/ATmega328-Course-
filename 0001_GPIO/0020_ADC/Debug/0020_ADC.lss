
0020_ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000007f0  00000864  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000882  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000939  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000079c  00000000  00000000  000012a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003da  00000000  00000000  00001a45  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b8  00000000  00000000  00001e20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000429  00000000  00000000  00001ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000217  00000000  00000000  00002301  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00002518  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ef       	ldi	r30, 0xF0	; 240
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 cf 00 	call	0x19e	; 0x19e <main>
  8e:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <uartInit>:

// Function to initialize UART communication
void uartInit(uint32_t baudRate)
{
    // Calculate and set baud rate
	uint16_t ubrr = (F_CPU / (16 * baudRate)) - 1;
  96:	dc 01       	movw	r26, r24
  98:	cb 01       	movw	r24, r22
  9a:	88 0f       	add	r24, r24
  9c:	99 1f       	adc	r25, r25
  9e:	aa 1f       	adc	r26, r26
  a0:	bb 1f       	adc	r27, r27
  a2:	88 0f       	add	r24, r24
  a4:	99 1f       	adc	r25, r25
  a6:	aa 1f       	adc	r26, r26
  a8:	bb 1f       	adc	r27, r27
  aa:	9c 01       	movw	r18, r24
  ac:	ad 01       	movw	r20, r26
  ae:	22 0f       	add	r18, r18
  b0:	33 1f       	adc	r19, r19
  b2:	44 1f       	adc	r20, r20
  b4:	55 1f       	adc	r21, r21
  b6:	22 0f       	add	r18, r18
  b8:	33 1f       	adc	r19, r19
  ba:	44 1f       	adc	r20, r20
  bc:	55 1f       	adc	r21, r21
  be:	60 e0       	ldi	r22, 0x00	; 0
  c0:	74 e2       	ldi	r23, 0x24	; 36
  c2:	84 ef       	ldi	r24, 0xF4	; 244
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <__udivmodsi4>
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	31 09       	sbc	r19, r1
	UBRR0H = (uint8_t)(ubrr >> 8);
  ce:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)ubrr;
  d2:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Enable transmitter and receiver
	UCSR0B = (1U << RXEN0) | (1U << TXEN0);
  d6:	88 e1       	ldi	r24, 0x18	; 24
  d8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Set data frame format: 8 data bits, 1 stop bit
	UCSR0C = (1U << UCSZ01) | (1U << UCSZ00);
  dc:	86 e0       	ldi	r24, 0x06	; 6
  de:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  e2:	08 95       	ret

000000e4 <adcInit>:

// Function to initialize ADC
void adcInit()
{
	// Set reference voltage to AVCC (5V), left adjust ADC result
	ADMUX = (1U << REFS0);
  e4:	80 e4       	ldi	r24, 0x40	; 64
  e6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	
	// Enable ADC, set ADC prescaler to 128
	ADCSRA = (1U << ADEN) | (1U << ADPS2) | (1U << ADPS1) | (1U << ADPS0);
  ea:	87 e8       	ldi	r24, 0x87	; 135
  ec:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  f0:	08 95       	ret

000000f2 <transmittData>:

// Function to transmit a byte of data via UART
void transmittData(uint8_t data)
{
	// Wait until the transmit buffer is empty
	while(!(UCSR0A & (1U << UDRE0))) {}
  f2:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  f6:	95 ff       	sbrs	r25, 5
  f8:	fc cf       	rjmp	.-8      	; 0xf2 <transmittData>
	
	// Transmit data
	UDR0 = data;
  fa:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  fe:	08 95       	ret

00000100 <analogRead>:

// Function to read analog sensor value from specified channel
uint16_t analogRead(uint8_t channel)
{
	// Select ADC channel
	ADMUX = (ADMUX & 0xF8) | (channel & 0x07);
 100:	ec e7       	ldi	r30, 0x7C	; 124
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	90 81       	ld	r25, Z
 106:	98 7f       	andi	r25, 0xF8	; 248
 108:	87 70       	andi	r24, 0x07	; 7
 10a:	89 2b       	or	r24, r25
 10c:	80 83       	st	Z, r24
	
	// Start conversion
	ADCSRA |= (1U << ADSC);
 10e:	ea e7       	ldi	r30, 0x7A	; 122
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	80 64       	ori	r24, 0x40	; 64
 116:	80 83       	st	Z, r24
	
	// Wait for conversion to complete
	while(ADCSRA & (1U << ADSC)){}
 118:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 11c:	86 fd       	sbrc	r24, 6
 11e:	fc cf       	rjmp	.-8      	; 0x118 <analogRead+0x18>
	
	// Return ADC result
	return ADC;
 120:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 124:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 128:	08 95       	ret

0000012a <printString>:

// Function to transmit a string via UART
void printString(const char *str)
{
 12a:	0f 93       	push	r16
 12c:	1f 93       	push	r17
 12e:	cf 93       	push	r28
 130:	df 93       	push	r29
 132:	8c 01       	movw	r16, r24
	// Loop through the string and transmit each character
	for(int i = 0; str[i] != '\0';i++)
 134:	c0 e0       	ldi	r28, 0x00	; 0
 136:	d0 e0       	ldi	r29, 0x00	; 0
 138:	03 c0       	rjmp	.+6      	; 0x140 <printString+0x16>
	{
		transmittData(str[i]);
 13a:	0e 94 79 00 	call	0xf2	; 0xf2 <transmittData>

// Function to transmit a string via UART
void printString(const char *str)
{
	// Loop through the string and transmit each character
	for(int i = 0; str[i] != '\0';i++)
 13e:	21 96       	adiw	r28, 0x01	; 1
 140:	f8 01       	movw	r30, r16
 142:	ec 0f       	add	r30, r28
 144:	fd 1f       	adc	r31, r29
 146:	80 81       	ld	r24, Z
 148:	81 11       	cpse	r24, r1
 14a:	f7 cf       	rjmp	.-18     	; 0x13a <printString+0x10>
	{
		transmittData(str[i]);
	}
}
 14c:	df 91       	pop	r29
 14e:	cf 91       	pop	r28
 150:	1f 91       	pop	r17
 152:	0f 91       	pop	r16
 154:	08 95       	ret

00000156 <SerialPrintf>:

// Function to print formatted data via UART
void SerialPrintf(const char *format,...)
{
 156:	cf 93       	push	r28
 158:	df 93       	push	r29
 15a:	cd b7       	in	r28, 0x3d	; 61
 15c:	de b7       	in	r29, 0x3e	; 62
 15e:	c0 54       	subi	r28, 0x40	; 64
 160:	d1 09       	sbc	r29, r1
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	de bf       	out	0x3e, r29	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	cd bf       	out	0x3d, r28	; 61
 16c:	ae 01       	movw	r20, r28
 16e:	4b 5b       	subi	r20, 0xBB	; 187
 170:	5f 4f       	sbci	r21, 0xFF	; 255
 172:	fa 01       	movw	r30, r20
 174:	61 91       	ld	r22, Z+
 176:	71 91       	ld	r23, Z+
 178:	af 01       	movw	r20, r30
	va_list args;
	va_start(args,format);
	char buffer[64];
	
	// Format data according to format string
	vsprintf(buffer,format,args);
 17a:	ce 01       	movw	r24, r28
 17c:	01 96       	adiw	r24, 0x01	; 1
 17e:	0e 94 12 01 	call	0x224	; 0x224 <vsprintf>
	
	// Transmit formatted string
	printString(buffer);
 182:	ce 01       	movw	r24, r28
 184:	01 96       	adiw	r24, 0x01	; 1
 186:	0e 94 95 00 	call	0x12a	; 0x12a <printString>
	
	va_end(args);
}
 18a:	c0 5c       	subi	r28, 0xC0	; 192
 18c:	df 4f       	sbci	r29, 0xFF	; 255
 18e:	0f b6       	in	r0, 0x3f	; 63
 190:	f8 94       	cli
 192:	de bf       	out	0x3e, r29	; 62
 194:	0f be       	out	0x3f, r0	; 63
 196:	cd bf       	out	0x3d, r28	; 61
 198:	df 91       	pop	r29
 19a:	cf 91       	pop	r28
 19c:	08 95       	ret

0000019e <main>:

int main(void)
{
    /* Replace with your application code */
	// Initialize UART communication and ADC
	uartInit(9600);
 19e:	60 e8       	ldi	r22, 0x80	; 128
 1a0:	75 e2       	ldi	r23, 0x25	; 37
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	0e 94 4b 00 	call	0x96	; 0x96 <uartInit>
	adcInit();
 1aa:	0e 94 72 00 	call	0xe4	; 0xe4 <adcInit>
	uint16_t sensorValue  =  20;
	
    while (1) 
    {
		// Read sensor value from ADC channel 0
		sensorValue = analogRead(0);
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	0e 94 80 00 	call	0x100	; 0x100 <analogRead>
		
		// Transmit sensor value via UART
		SerialPrintf("The Sensor Value is = %d \r \n",sensorValue);
 1b4:	9f 93       	push	r25
 1b6:	8f 93       	push	r24
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	91 e0       	ldi	r25, 0x01	; 1
 1bc:	9f 93       	push	r25
 1be:	8f 93       	push	r24
 1c0:	0e 94 ab 00 	call	0x156	; 0x156 <SerialPrintf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c4:	2f ef       	ldi	r18, 0xFF	; 255
 1c6:	83 ed       	ldi	r24, 0xD3	; 211
 1c8:	90 e3       	ldi	r25, 0x30	; 48
 1ca:	21 50       	subi	r18, 0x01	; 1
 1cc:	80 40       	sbci	r24, 0x00	; 0
 1ce:	90 40       	sbci	r25, 0x00	; 0
 1d0:	e1 f7       	brne	.-8      	; 0x1ca <main+0x2c>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <main+0x36>
 1d4:	00 00       	nop
 1d6:	0f 90       	pop	r0
 1d8:	0f 90       	pop	r0
 1da:	0f 90       	pop	r0
 1dc:	0f 90       	pop	r0
 1de:	e7 cf       	rjmp	.-50     	; 0x1ae <main+0x10>

000001e0 <__udivmodsi4>:
 1e0:	a1 e2       	ldi	r26, 0x21	; 33
 1e2:	1a 2e       	mov	r1, r26
 1e4:	aa 1b       	sub	r26, r26
 1e6:	bb 1b       	sub	r27, r27
 1e8:	fd 01       	movw	r30, r26
 1ea:	0d c0       	rjmp	.+26     	; 0x206 <__udivmodsi4_ep>

000001ec <__udivmodsi4_loop>:
 1ec:	aa 1f       	adc	r26, r26
 1ee:	bb 1f       	adc	r27, r27
 1f0:	ee 1f       	adc	r30, r30
 1f2:	ff 1f       	adc	r31, r31
 1f4:	a2 17       	cp	r26, r18
 1f6:	b3 07       	cpc	r27, r19
 1f8:	e4 07       	cpc	r30, r20
 1fa:	f5 07       	cpc	r31, r21
 1fc:	20 f0       	brcs	.+8      	; 0x206 <__udivmodsi4_ep>
 1fe:	a2 1b       	sub	r26, r18
 200:	b3 0b       	sbc	r27, r19
 202:	e4 0b       	sbc	r30, r20
 204:	f5 0b       	sbc	r31, r21

00000206 <__udivmodsi4_ep>:
 206:	66 1f       	adc	r22, r22
 208:	77 1f       	adc	r23, r23
 20a:	88 1f       	adc	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	1a 94       	dec	r1
 210:	69 f7       	brne	.-38     	; 0x1ec <__udivmodsi4_loop>
 212:	60 95       	com	r22
 214:	70 95       	com	r23
 216:	80 95       	com	r24
 218:	90 95       	com	r25
 21a:	9b 01       	movw	r18, r22
 21c:	ac 01       	movw	r20, r24
 21e:	bd 01       	movw	r22, r26
 220:	cf 01       	movw	r24, r30
 222:	08 95       	ret

00000224 <vsprintf>:
 224:	ae e0       	ldi	r26, 0x0E	; 14
 226:	b0 e0       	ldi	r27, 0x00	; 0
 228:	e8 e1       	ldi	r30, 0x18	; 24
 22a:	f1 e0       	ldi	r31, 0x01	; 1
 22c:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__prologue_saves__+0x1c>
 230:	8c 01       	movw	r16, r24
 232:	86 e0       	ldi	r24, 0x06	; 6
 234:	8c 83       	std	Y+4, r24	; 0x04
 236:	1a 83       	std	Y+2, r17	; 0x02
 238:	09 83       	std	Y+1, r16	; 0x01
 23a:	8f ef       	ldi	r24, 0xFF	; 255
 23c:	9f e7       	ldi	r25, 0x7F	; 127
 23e:	9e 83       	std	Y+6, r25	; 0x06
 240:	8d 83       	std	Y+5, r24	; 0x05
 242:	ce 01       	movw	r24, r28
 244:	01 96       	adiw	r24, 0x01	; 1
 246:	0e 94 2e 01 	call	0x25c	; 0x25c <vfprintf>
 24a:	ef 81       	ldd	r30, Y+7	; 0x07
 24c:	f8 85       	ldd	r31, Y+8	; 0x08
 24e:	e0 0f       	add	r30, r16
 250:	f1 1f       	adc	r31, r17
 252:	10 82       	st	Z, r1
 254:	2e 96       	adiw	r28, 0x0e	; 14
 256:	e4 e0       	ldi	r30, 0x04	; 4
 258:	0c 94 e9 03 	jmp	0x7d2	; 0x7d2 <__epilogue_restores__+0x1c>

0000025c <vfprintf>:
 25c:	ab e0       	ldi	r26, 0x0B	; 11
 25e:	b0 e0       	ldi	r27, 0x00	; 0
 260:	e4 e3       	ldi	r30, 0x34	; 52
 262:	f1 e0       	ldi	r31, 0x01	; 1
 264:	0c 94 bf 03 	jmp	0x77e	; 0x77e <__prologue_saves__>
 268:	6c 01       	movw	r12, r24
 26a:	7b 01       	movw	r14, r22
 26c:	8a 01       	movw	r16, r20
 26e:	fc 01       	movw	r30, r24
 270:	17 82       	std	Z+7, r1	; 0x07
 272:	16 82       	std	Z+6, r1	; 0x06
 274:	83 81       	ldd	r24, Z+3	; 0x03
 276:	81 ff       	sbrs	r24, 1
 278:	cc c1       	rjmp	.+920    	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 27a:	ce 01       	movw	r24, r28
 27c:	01 96       	adiw	r24, 0x01	; 1
 27e:	3c 01       	movw	r6, r24
 280:	f6 01       	movw	r30, r12
 282:	93 81       	ldd	r25, Z+3	; 0x03
 284:	f7 01       	movw	r30, r14
 286:	93 fd       	sbrc	r25, 3
 288:	85 91       	lpm	r24, Z+
 28a:	93 ff       	sbrs	r25, 3
 28c:	81 91       	ld	r24, Z+
 28e:	7f 01       	movw	r14, r30
 290:	88 23       	and	r24, r24
 292:	09 f4       	brne	.+2      	; 0x296 <vfprintf+0x3a>
 294:	ba c1       	rjmp	.+884    	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 296:	85 32       	cpi	r24, 0x25	; 37
 298:	39 f4       	brne	.+14     	; 0x2a8 <vfprintf+0x4c>
 29a:	93 fd       	sbrc	r25, 3
 29c:	85 91       	lpm	r24, Z+
 29e:	93 ff       	sbrs	r25, 3
 2a0:	81 91       	ld	r24, Z+
 2a2:	7f 01       	movw	r14, r30
 2a4:	85 32       	cpi	r24, 0x25	; 37
 2a6:	29 f4       	brne	.+10     	; 0x2b2 <vfprintf+0x56>
 2a8:	b6 01       	movw	r22, r12
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 25 03 	call	0x64a	; 0x64a <fputc>
 2b0:	e7 cf       	rjmp	.-50     	; 0x280 <vfprintf+0x24>
 2b2:	91 2c       	mov	r9, r1
 2b4:	21 2c       	mov	r2, r1
 2b6:	31 2c       	mov	r3, r1
 2b8:	ff e1       	ldi	r31, 0x1F	; 31
 2ba:	f3 15       	cp	r31, r3
 2bc:	d8 f0       	brcs	.+54     	; 0x2f4 <vfprintf+0x98>
 2be:	8b 32       	cpi	r24, 0x2B	; 43
 2c0:	79 f0       	breq	.+30     	; 0x2e0 <vfprintf+0x84>
 2c2:	38 f4       	brcc	.+14     	; 0x2d2 <vfprintf+0x76>
 2c4:	80 32       	cpi	r24, 0x20	; 32
 2c6:	79 f0       	breq	.+30     	; 0x2e6 <vfprintf+0x8a>
 2c8:	83 32       	cpi	r24, 0x23	; 35
 2ca:	a1 f4       	brne	.+40     	; 0x2f4 <vfprintf+0x98>
 2cc:	23 2d       	mov	r18, r3
 2ce:	20 61       	ori	r18, 0x10	; 16
 2d0:	1d c0       	rjmp	.+58     	; 0x30c <vfprintf+0xb0>
 2d2:	8d 32       	cpi	r24, 0x2D	; 45
 2d4:	61 f0       	breq	.+24     	; 0x2ee <vfprintf+0x92>
 2d6:	80 33       	cpi	r24, 0x30	; 48
 2d8:	69 f4       	brne	.+26     	; 0x2f4 <vfprintf+0x98>
 2da:	23 2d       	mov	r18, r3
 2dc:	21 60       	ori	r18, 0x01	; 1
 2de:	16 c0       	rjmp	.+44     	; 0x30c <vfprintf+0xb0>
 2e0:	83 2d       	mov	r24, r3
 2e2:	82 60       	ori	r24, 0x02	; 2
 2e4:	38 2e       	mov	r3, r24
 2e6:	e3 2d       	mov	r30, r3
 2e8:	e4 60       	ori	r30, 0x04	; 4
 2ea:	3e 2e       	mov	r3, r30
 2ec:	2a c0       	rjmp	.+84     	; 0x342 <vfprintf+0xe6>
 2ee:	f3 2d       	mov	r31, r3
 2f0:	f8 60       	ori	r31, 0x08	; 8
 2f2:	1d c0       	rjmp	.+58     	; 0x32e <vfprintf+0xd2>
 2f4:	37 fc       	sbrc	r3, 7
 2f6:	2d c0       	rjmp	.+90     	; 0x352 <vfprintf+0xf6>
 2f8:	20 ed       	ldi	r18, 0xD0	; 208
 2fa:	28 0f       	add	r18, r24
 2fc:	2a 30       	cpi	r18, 0x0A	; 10
 2fe:	40 f0       	brcs	.+16     	; 0x310 <vfprintf+0xb4>
 300:	8e 32       	cpi	r24, 0x2E	; 46
 302:	b9 f4       	brne	.+46     	; 0x332 <vfprintf+0xd6>
 304:	36 fc       	sbrc	r3, 6
 306:	81 c1       	rjmp	.+770    	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 308:	23 2d       	mov	r18, r3
 30a:	20 64       	ori	r18, 0x40	; 64
 30c:	32 2e       	mov	r3, r18
 30e:	19 c0       	rjmp	.+50     	; 0x342 <vfprintf+0xe6>
 310:	36 fe       	sbrs	r3, 6
 312:	06 c0       	rjmp	.+12     	; 0x320 <vfprintf+0xc4>
 314:	8a e0       	ldi	r24, 0x0A	; 10
 316:	98 9e       	mul	r9, r24
 318:	20 0d       	add	r18, r0
 31a:	11 24       	eor	r1, r1
 31c:	92 2e       	mov	r9, r18
 31e:	11 c0       	rjmp	.+34     	; 0x342 <vfprintf+0xe6>
 320:	ea e0       	ldi	r30, 0x0A	; 10
 322:	2e 9e       	mul	r2, r30
 324:	20 0d       	add	r18, r0
 326:	11 24       	eor	r1, r1
 328:	22 2e       	mov	r2, r18
 32a:	f3 2d       	mov	r31, r3
 32c:	f0 62       	ori	r31, 0x20	; 32
 32e:	3f 2e       	mov	r3, r31
 330:	08 c0       	rjmp	.+16     	; 0x342 <vfprintf+0xe6>
 332:	8c 36       	cpi	r24, 0x6C	; 108
 334:	21 f4       	brne	.+8      	; 0x33e <vfprintf+0xe2>
 336:	83 2d       	mov	r24, r3
 338:	80 68       	ori	r24, 0x80	; 128
 33a:	38 2e       	mov	r3, r24
 33c:	02 c0       	rjmp	.+4      	; 0x342 <vfprintf+0xe6>
 33e:	88 36       	cpi	r24, 0x68	; 104
 340:	41 f4       	brne	.+16     	; 0x352 <vfprintf+0xf6>
 342:	f7 01       	movw	r30, r14
 344:	93 fd       	sbrc	r25, 3
 346:	85 91       	lpm	r24, Z+
 348:	93 ff       	sbrs	r25, 3
 34a:	81 91       	ld	r24, Z+
 34c:	7f 01       	movw	r14, r30
 34e:	81 11       	cpse	r24, r1
 350:	b3 cf       	rjmp	.-154    	; 0x2b8 <vfprintf+0x5c>
 352:	98 2f       	mov	r25, r24
 354:	9f 7d       	andi	r25, 0xDF	; 223
 356:	95 54       	subi	r25, 0x45	; 69
 358:	93 30       	cpi	r25, 0x03	; 3
 35a:	28 f4       	brcc	.+10     	; 0x366 <vfprintf+0x10a>
 35c:	0c 5f       	subi	r16, 0xFC	; 252
 35e:	1f 4f       	sbci	r17, 0xFF	; 255
 360:	9f e3       	ldi	r25, 0x3F	; 63
 362:	99 83       	std	Y+1, r25	; 0x01
 364:	0d c0       	rjmp	.+26     	; 0x380 <vfprintf+0x124>
 366:	83 36       	cpi	r24, 0x63	; 99
 368:	31 f0       	breq	.+12     	; 0x376 <vfprintf+0x11a>
 36a:	83 37       	cpi	r24, 0x73	; 115
 36c:	71 f0       	breq	.+28     	; 0x38a <vfprintf+0x12e>
 36e:	83 35       	cpi	r24, 0x53	; 83
 370:	09 f0       	breq	.+2      	; 0x374 <vfprintf+0x118>
 372:	59 c0       	rjmp	.+178    	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 374:	21 c0       	rjmp	.+66     	; 0x3b8 <vfprintf+0x15c>
 376:	f8 01       	movw	r30, r16
 378:	80 81       	ld	r24, Z
 37a:	89 83       	std	Y+1, r24	; 0x01
 37c:	0e 5f       	subi	r16, 0xFE	; 254
 37e:	1f 4f       	sbci	r17, 0xFF	; 255
 380:	88 24       	eor	r8, r8
 382:	83 94       	inc	r8
 384:	91 2c       	mov	r9, r1
 386:	53 01       	movw	r10, r6
 388:	13 c0       	rjmp	.+38     	; 0x3b0 <vfprintf+0x154>
 38a:	28 01       	movw	r4, r16
 38c:	f2 e0       	ldi	r31, 0x02	; 2
 38e:	4f 0e       	add	r4, r31
 390:	51 1c       	adc	r5, r1
 392:	f8 01       	movw	r30, r16
 394:	a0 80       	ld	r10, Z
 396:	b1 80       	ldd	r11, Z+1	; 0x01
 398:	36 fe       	sbrs	r3, 6
 39a:	03 c0       	rjmp	.+6      	; 0x3a2 <vfprintf+0x146>
 39c:	69 2d       	mov	r22, r9
 39e:	70 e0       	ldi	r23, 0x00	; 0
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <vfprintf+0x14a>
 3a2:	6f ef       	ldi	r22, 0xFF	; 255
 3a4:	7f ef       	ldi	r23, 0xFF	; 255
 3a6:	c5 01       	movw	r24, r10
 3a8:	0e 94 1a 03 	call	0x634	; 0x634 <strnlen>
 3ac:	4c 01       	movw	r8, r24
 3ae:	82 01       	movw	r16, r4
 3b0:	f3 2d       	mov	r31, r3
 3b2:	ff 77       	andi	r31, 0x7F	; 127
 3b4:	3f 2e       	mov	r3, r31
 3b6:	16 c0       	rjmp	.+44     	; 0x3e4 <vfprintf+0x188>
 3b8:	28 01       	movw	r4, r16
 3ba:	22 e0       	ldi	r18, 0x02	; 2
 3bc:	42 0e       	add	r4, r18
 3be:	51 1c       	adc	r5, r1
 3c0:	f8 01       	movw	r30, r16
 3c2:	a0 80       	ld	r10, Z
 3c4:	b1 80       	ldd	r11, Z+1	; 0x01
 3c6:	36 fe       	sbrs	r3, 6
 3c8:	03 c0       	rjmp	.+6      	; 0x3d0 <vfprintf+0x174>
 3ca:	69 2d       	mov	r22, r9
 3cc:	70 e0       	ldi	r23, 0x00	; 0
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <vfprintf+0x178>
 3d0:	6f ef       	ldi	r22, 0xFF	; 255
 3d2:	7f ef       	ldi	r23, 0xFF	; 255
 3d4:	c5 01       	movw	r24, r10
 3d6:	0e 94 0f 03 	call	0x61e	; 0x61e <strnlen_P>
 3da:	4c 01       	movw	r8, r24
 3dc:	f3 2d       	mov	r31, r3
 3de:	f0 68       	ori	r31, 0x80	; 128
 3e0:	3f 2e       	mov	r3, r31
 3e2:	82 01       	movw	r16, r4
 3e4:	33 fc       	sbrc	r3, 3
 3e6:	1b c0       	rjmp	.+54     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3e8:	82 2d       	mov	r24, r2
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	88 16       	cp	r8, r24
 3ee:	99 06       	cpc	r9, r25
 3f0:	b0 f4       	brcc	.+44     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3f2:	b6 01       	movw	r22, r12
 3f4:	80 e2       	ldi	r24, 0x20	; 32
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	0e 94 25 03 	call	0x64a	; 0x64a <fputc>
 3fc:	2a 94       	dec	r2
 3fe:	f4 cf       	rjmp	.-24     	; 0x3e8 <vfprintf+0x18c>
 400:	f5 01       	movw	r30, r10
 402:	37 fc       	sbrc	r3, 7
 404:	85 91       	lpm	r24, Z+
 406:	37 fe       	sbrs	r3, 7
 408:	81 91       	ld	r24, Z+
 40a:	5f 01       	movw	r10, r30
 40c:	b6 01       	movw	r22, r12
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	0e 94 25 03 	call	0x64a	; 0x64a <fputc>
 414:	21 10       	cpse	r2, r1
 416:	2a 94       	dec	r2
 418:	21 e0       	ldi	r18, 0x01	; 1
 41a:	82 1a       	sub	r8, r18
 41c:	91 08       	sbc	r9, r1
 41e:	81 14       	cp	r8, r1
 420:	91 04       	cpc	r9, r1
 422:	71 f7       	brne	.-36     	; 0x400 <__EEPROM_REGION_LENGTH__>
 424:	e8 c0       	rjmp	.+464    	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 426:	84 36       	cpi	r24, 0x64	; 100
 428:	11 f0       	breq	.+4      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 42a:	89 36       	cpi	r24, 0x69	; 105
 42c:	41 f5       	brne	.+80     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 42e:	f8 01       	movw	r30, r16
 430:	37 fe       	sbrs	r3, 7
 432:	07 c0       	rjmp	.+14     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 434:	60 81       	ld	r22, Z
 436:	71 81       	ldd	r23, Z+1	; 0x01
 438:	82 81       	ldd	r24, Z+2	; 0x02
 43a:	93 81       	ldd	r25, Z+3	; 0x03
 43c:	0c 5f       	subi	r16, 0xFC	; 252
 43e:	1f 4f       	sbci	r17, 0xFF	; 255
 440:	08 c0       	rjmp	.+16     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 442:	60 81       	ld	r22, Z
 444:	71 81       	ldd	r23, Z+1	; 0x01
 446:	07 2e       	mov	r0, r23
 448:	00 0c       	add	r0, r0
 44a:	88 0b       	sbc	r24, r24
 44c:	99 0b       	sbc	r25, r25
 44e:	0e 5f       	subi	r16, 0xFE	; 254
 450:	1f 4f       	sbci	r17, 0xFF	; 255
 452:	f3 2d       	mov	r31, r3
 454:	ff 76       	andi	r31, 0x6F	; 111
 456:	3f 2e       	mov	r3, r31
 458:	97 ff       	sbrs	r25, 7
 45a:	09 c0       	rjmp	.+18     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 45c:	90 95       	com	r25
 45e:	80 95       	com	r24
 460:	70 95       	com	r23
 462:	61 95       	neg	r22
 464:	7f 4f       	sbci	r23, 0xFF	; 255
 466:	8f 4f       	sbci	r24, 0xFF	; 255
 468:	9f 4f       	sbci	r25, 0xFF	; 255
 46a:	f0 68       	ori	r31, 0x80	; 128
 46c:	3f 2e       	mov	r3, r31
 46e:	2a e0       	ldi	r18, 0x0A	; 10
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	a3 01       	movw	r20, r6
 474:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__ultoa_invert>
 478:	88 2e       	mov	r8, r24
 47a:	86 18       	sub	r8, r6
 47c:	45 c0       	rjmp	.+138    	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 47e:	85 37       	cpi	r24, 0x75	; 117
 480:	31 f4       	brne	.+12     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 482:	23 2d       	mov	r18, r3
 484:	2f 7e       	andi	r18, 0xEF	; 239
 486:	b2 2e       	mov	r11, r18
 488:	2a e0       	ldi	r18, 0x0A	; 10
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	25 c0       	rjmp	.+74     	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 48e:	93 2d       	mov	r25, r3
 490:	99 7f       	andi	r25, 0xF9	; 249
 492:	b9 2e       	mov	r11, r25
 494:	8f 36       	cpi	r24, 0x6F	; 111
 496:	c1 f0       	breq	.+48     	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 498:	18 f4       	brcc	.+6      	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 49a:	88 35       	cpi	r24, 0x58	; 88
 49c:	79 f0       	breq	.+30     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 49e:	b5 c0       	rjmp	.+362    	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 4a0:	80 37       	cpi	r24, 0x70	; 112
 4a2:	19 f0       	breq	.+6      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4a4:	88 37       	cpi	r24, 0x78	; 120
 4a6:	21 f0       	breq	.+8      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4a8:	b0 c0       	rjmp	.+352    	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 4aa:	e9 2f       	mov	r30, r25
 4ac:	e0 61       	ori	r30, 0x10	; 16
 4ae:	be 2e       	mov	r11, r30
 4b0:	b4 fe       	sbrs	r11, 4
 4b2:	0d c0       	rjmp	.+26     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4b4:	fb 2d       	mov	r31, r11
 4b6:	f4 60       	ori	r31, 0x04	; 4
 4b8:	bf 2e       	mov	r11, r31
 4ba:	09 c0       	rjmp	.+18     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4bc:	34 fe       	sbrs	r3, 4
 4be:	0a c0       	rjmp	.+20     	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4c0:	29 2f       	mov	r18, r25
 4c2:	26 60       	ori	r18, 0x06	; 6
 4c4:	b2 2e       	mov	r11, r18
 4c6:	06 c0       	rjmp	.+12     	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4c8:	28 e0       	ldi	r18, 0x08	; 8
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	05 c0       	rjmp	.+10     	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 4ce:	20 e1       	ldi	r18, 0x10	; 16
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 4d4:	20 e1       	ldi	r18, 0x10	; 16
 4d6:	32 e0       	ldi	r19, 0x02	; 2
 4d8:	f8 01       	movw	r30, r16
 4da:	b7 fe       	sbrs	r11, 7
 4dc:	07 c0       	rjmp	.+14     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4de:	60 81       	ld	r22, Z
 4e0:	71 81       	ldd	r23, Z+1	; 0x01
 4e2:	82 81       	ldd	r24, Z+2	; 0x02
 4e4:	93 81       	ldd	r25, Z+3	; 0x03
 4e6:	0c 5f       	subi	r16, 0xFC	; 252
 4e8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ea:	06 c0       	rjmp	.+12     	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4ec:	60 81       	ld	r22, Z
 4ee:	71 81       	ldd	r23, Z+1	; 0x01
 4f0:	80 e0       	ldi	r24, 0x00	; 0
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	0e 5f       	subi	r16, 0xFE	; 254
 4f6:	1f 4f       	sbci	r17, 0xFF	; 255
 4f8:	a3 01       	movw	r20, r6
 4fa:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__ultoa_invert>
 4fe:	88 2e       	mov	r8, r24
 500:	86 18       	sub	r8, r6
 502:	fb 2d       	mov	r31, r11
 504:	ff 77       	andi	r31, 0x7F	; 127
 506:	3f 2e       	mov	r3, r31
 508:	36 fe       	sbrs	r3, 6
 50a:	0d c0       	rjmp	.+26     	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 50c:	23 2d       	mov	r18, r3
 50e:	2e 7f       	andi	r18, 0xFE	; 254
 510:	a2 2e       	mov	r10, r18
 512:	89 14       	cp	r8, r9
 514:	58 f4       	brcc	.+22     	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 516:	34 fe       	sbrs	r3, 4
 518:	0b c0       	rjmp	.+22     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
 51a:	32 fc       	sbrc	r3, 2
 51c:	09 c0       	rjmp	.+18     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
 51e:	83 2d       	mov	r24, r3
 520:	8e 7e       	andi	r24, 0xEE	; 238
 522:	a8 2e       	mov	r10, r24
 524:	05 c0       	rjmp	.+10     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
 526:	b8 2c       	mov	r11, r8
 528:	a3 2c       	mov	r10, r3
 52a:	03 c0       	rjmp	.+6      	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 52c:	b8 2c       	mov	r11, r8
 52e:	01 c0       	rjmp	.+2      	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 530:	b9 2c       	mov	r11, r9
 532:	a4 fe       	sbrs	r10, 4
 534:	0f c0       	rjmp	.+30     	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
 536:	fe 01       	movw	r30, r28
 538:	e8 0d       	add	r30, r8
 53a:	f1 1d       	adc	r31, r1
 53c:	80 81       	ld	r24, Z
 53e:	80 33       	cpi	r24, 0x30	; 48
 540:	21 f4       	brne	.+8      	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 542:	9a 2d       	mov	r25, r10
 544:	99 7e       	andi	r25, 0xE9	; 233
 546:	a9 2e       	mov	r10, r25
 548:	09 c0       	rjmp	.+18     	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 54a:	a2 fe       	sbrs	r10, 2
 54c:	06 c0       	rjmp	.+12     	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
 54e:	b3 94       	inc	r11
 550:	b3 94       	inc	r11
 552:	04 c0       	rjmp	.+8      	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 554:	8a 2d       	mov	r24, r10
 556:	86 78       	andi	r24, 0x86	; 134
 558:	09 f0       	breq	.+2      	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 55a:	b3 94       	inc	r11
 55c:	a3 fc       	sbrc	r10, 3
 55e:	11 c0       	rjmp	.+34     	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 560:	a0 fe       	sbrs	r10, 0
 562:	06 c0       	rjmp	.+12     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 564:	b2 14       	cp	r11, r2
 566:	88 f4       	brcc	.+34     	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 568:	28 0c       	add	r2, r8
 56a:	92 2c       	mov	r9, r2
 56c:	9b 18       	sub	r9, r11
 56e:	0e c0       	rjmp	.+28     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 570:	b2 14       	cp	r11, r2
 572:	60 f4       	brcc	.+24     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 574:	b6 01       	movw	r22, r12
 576:	80 e2       	ldi	r24, 0x20	; 32
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	0e 94 25 03 	call	0x64a	; 0x64a <fputc>
 57e:	b3 94       	inc	r11
 580:	f7 cf       	rjmp	.-18     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 582:	b2 14       	cp	r11, r2
 584:	18 f4       	brcc	.+6      	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 586:	2b 18       	sub	r2, r11
 588:	02 c0       	rjmp	.+4      	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 58a:	98 2c       	mov	r9, r8
 58c:	21 2c       	mov	r2, r1
 58e:	a4 fe       	sbrs	r10, 4
 590:	10 c0       	rjmp	.+32     	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
 592:	b6 01       	movw	r22, r12
 594:	80 e3       	ldi	r24, 0x30	; 48
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	0e 94 25 03 	call	0x64a	; 0x64a <fputc>
 59c:	a2 fe       	sbrs	r10, 2
 59e:	17 c0       	rjmp	.+46     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5a0:	a1 fc       	sbrc	r10, 1
 5a2:	03 c0       	rjmp	.+6      	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 5a4:	88 e7       	ldi	r24, 0x78	; 120
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 5aa:	88 e5       	ldi	r24, 0x58	; 88
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	b6 01       	movw	r22, r12
 5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
 5b2:	8a 2d       	mov	r24, r10
 5b4:	86 78       	andi	r24, 0x86	; 134
 5b6:	59 f0       	breq	.+22     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5b8:	a1 fe       	sbrs	r10, 1
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5bc:	8b e2       	ldi	r24, 0x2B	; 43
 5be:	01 c0       	rjmp	.+2      	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5c0:	80 e2       	ldi	r24, 0x20	; 32
 5c2:	a7 fc       	sbrc	r10, 7
 5c4:	8d e2       	ldi	r24, 0x2D	; 45
 5c6:	b6 01       	movw	r22, r12
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 25 03 	call	0x64a	; 0x64a <fputc>
 5ce:	89 14       	cp	r8, r9
 5d0:	38 f4       	brcc	.+14     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 5d2:	b6 01       	movw	r22, r12
 5d4:	80 e3       	ldi	r24, 0x30	; 48
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 94 25 03 	call	0x64a	; 0x64a <fputc>
 5dc:	9a 94       	dec	r9
 5de:	f7 cf       	rjmp	.-18     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5e0:	8a 94       	dec	r8
 5e2:	f3 01       	movw	r30, r6
 5e4:	e8 0d       	add	r30, r8
 5e6:	f1 1d       	adc	r31, r1
 5e8:	80 81       	ld	r24, Z
 5ea:	b6 01       	movw	r22, r12
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	0e 94 25 03 	call	0x64a	; 0x64a <fputc>
 5f2:	81 10       	cpse	r8, r1
 5f4:	f5 cf       	rjmp	.-22     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 5f6:	22 20       	and	r2, r2
 5f8:	09 f4       	brne	.+2      	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5fa:	42 ce       	rjmp	.-892    	; 0x280 <vfprintf+0x24>
 5fc:	b6 01       	movw	r22, r12
 5fe:	80 e2       	ldi	r24, 0x20	; 32
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	0e 94 25 03 	call	0x64a	; 0x64a <fputc>
 606:	2a 94       	dec	r2
 608:	f6 cf       	rjmp	.-20     	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 60a:	f6 01       	movw	r30, r12
 60c:	86 81       	ldd	r24, Z+6	; 0x06
 60e:	97 81       	ldd	r25, Z+7	; 0x07
 610:	02 c0       	rjmp	.+4      	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 612:	8f ef       	ldi	r24, 0xFF	; 255
 614:	9f ef       	ldi	r25, 0xFF	; 255
 616:	2b 96       	adiw	r28, 0x0b	; 11
 618:	e2 e1       	ldi	r30, 0x12	; 18
 61a:	0c 94 db 03 	jmp	0x7b6	; 0x7b6 <__epilogue_restores__>

0000061e <strnlen_P>:
 61e:	fc 01       	movw	r30, r24
 620:	05 90       	lpm	r0, Z+
 622:	61 50       	subi	r22, 0x01	; 1
 624:	70 40       	sbci	r23, 0x00	; 0
 626:	01 10       	cpse	r0, r1
 628:	d8 f7       	brcc	.-10     	; 0x620 <strnlen_P+0x2>
 62a:	80 95       	com	r24
 62c:	90 95       	com	r25
 62e:	8e 0f       	add	r24, r30
 630:	9f 1f       	adc	r25, r31
 632:	08 95       	ret

00000634 <strnlen>:
 634:	fc 01       	movw	r30, r24
 636:	61 50       	subi	r22, 0x01	; 1
 638:	70 40       	sbci	r23, 0x00	; 0
 63a:	01 90       	ld	r0, Z+
 63c:	01 10       	cpse	r0, r1
 63e:	d8 f7       	brcc	.-10     	; 0x636 <strnlen+0x2>
 640:	80 95       	com	r24
 642:	90 95       	com	r25
 644:	8e 0f       	add	r24, r30
 646:	9f 1f       	adc	r25, r31
 648:	08 95       	ret

0000064a <fputc>:
 64a:	0f 93       	push	r16
 64c:	1f 93       	push	r17
 64e:	cf 93       	push	r28
 650:	df 93       	push	r29
 652:	fb 01       	movw	r30, r22
 654:	23 81       	ldd	r18, Z+3	; 0x03
 656:	21 fd       	sbrc	r18, 1
 658:	03 c0       	rjmp	.+6      	; 0x660 <fputc+0x16>
 65a:	8f ef       	ldi	r24, 0xFF	; 255
 65c:	9f ef       	ldi	r25, 0xFF	; 255
 65e:	2c c0       	rjmp	.+88     	; 0x6b8 <fputc+0x6e>
 660:	22 ff       	sbrs	r18, 2
 662:	16 c0       	rjmp	.+44     	; 0x690 <fputc+0x46>
 664:	46 81       	ldd	r20, Z+6	; 0x06
 666:	57 81       	ldd	r21, Z+7	; 0x07
 668:	24 81       	ldd	r18, Z+4	; 0x04
 66a:	35 81       	ldd	r19, Z+5	; 0x05
 66c:	42 17       	cp	r20, r18
 66e:	53 07       	cpc	r21, r19
 670:	44 f4       	brge	.+16     	; 0x682 <fputc+0x38>
 672:	a0 81       	ld	r26, Z
 674:	b1 81       	ldd	r27, Z+1	; 0x01
 676:	9d 01       	movw	r18, r26
 678:	2f 5f       	subi	r18, 0xFF	; 255
 67a:	3f 4f       	sbci	r19, 0xFF	; 255
 67c:	31 83       	std	Z+1, r19	; 0x01
 67e:	20 83       	st	Z, r18
 680:	8c 93       	st	X, r24
 682:	26 81       	ldd	r18, Z+6	; 0x06
 684:	37 81       	ldd	r19, Z+7	; 0x07
 686:	2f 5f       	subi	r18, 0xFF	; 255
 688:	3f 4f       	sbci	r19, 0xFF	; 255
 68a:	37 83       	std	Z+7, r19	; 0x07
 68c:	26 83       	std	Z+6, r18	; 0x06
 68e:	14 c0       	rjmp	.+40     	; 0x6b8 <fputc+0x6e>
 690:	8b 01       	movw	r16, r22
 692:	ec 01       	movw	r28, r24
 694:	fb 01       	movw	r30, r22
 696:	00 84       	ldd	r0, Z+8	; 0x08
 698:	f1 85       	ldd	r31, Z+9	; 0x09
 69a:	e0 2d       	mov	r30, r0
 69c:	09 95       	icall
 69e:	89 2b       	or	r24, r25
 6a0:	e1 f6       	brne	.-72     	; 0x65a <fputc+0x10>
 6a2:	d8 01       	movw	r26, r16
 6a4:	16 96       	adiw	r26, 0x06	; 6
 6a6:	8d 91       	ld	r24, X+
 6a8:	9c 91       	ld	r25, X
 6aa:	17 97       	sbiw	r26, 0x07	; 7
 6ac:	01 96       	adiw	r24, 0x01	; 1
 6ae:	17 96       	adiw	r26, 0x07	; 7
 6b0:	9c 93       	st	X, r25
 6b2:	8e 93       	st	-X, r24
 6b4:	16 97       	sbiw	r26, 0x06	; 6
 6b6:	ce 01       	movw	r24, r28
 6b8:	df 91       	pop	r29
 6ba:	cf 91       	pop	r28
 6bc:	1f 91       	pop	r17
 6be:	0f 91       	pop	r16
 6c0:	08 95       	ret

000006c2 <__ultoa_invert>:
 6c2:	fa 01       	movw	r30, r20
 6c4:	aa 27       	eor	r26, r26
 6c6:	28 30       	cpi	r18, 0x08	; 8
 6c8:	51 f1       	breq	.+84     	; 0x71e <__ultoa_invert+0x5c>
 6ca:	20 31       	cpi	r18, 0x10	; 16
 6cc:	81 f1       	breq	.+96     	; 0x72e <__ultoa_invert+0x6c>
 6ce:	e8 94       	clt
 6d0:	6f 93       	push	r22
 6d2:	6e 7f       	andi	r22, 0xFE	; 254
 6d4:	6e 5f       	subi	r22, 0xFE	; 254
 6d6:	7f 4f       	sbci	r23, 0xFF	; 255
 6d8:	8f 4f       	sbci	r24, 0xFF	; 255
 6da:	9f 4f       	sbci	r25, 0xFF	; 255
 6dc:	af 4f       	sbci	r26, 0xFF	; 255
 6de:	b1 e0       	ldi	r27, 0x01	; 1
 6e0:	3e d0       	rcall	.+124    	; 0x75e <__ultoa_invert+0x9c>
 6e2:	b4 e0       	ldi	r27, 0x04	; 4
 6e4:	3c d0       	rcall	.+120    	; 0x75e <__ultoa_invert+0x9c>
 6e6:	67 0f       	add	r22, r23
 6e8:	78 1f       	adc	r23, r24
 6ea:	89 1f       	adc	r24, r25
 6ec:	9a 1f       	adc	r25, r26
 6ee:	a1 1d       	adc	r26, r1
 6f0:	68 0f       	add	r22, r24
 6f2:	79 1f       	adc	r23, r25
 6f4:	8a 1f       	adc	r24, r26
 6f6:	91 1d       	adc	r25, r1
 6f8:	a1 1d       	adc	r26, r1
 6fa:	6a 0f       	add	r22, r26
 6fc:	71 1d       	adc	r23, r1
 6fe:	81 1d       	adc	r24, r1
 700:	91 1d       	adc	r25, r1
 702:	a1 1d       	adc	r26, r1
 704:	20 d0       	rcall	.+64     	; 0x746 <__ultoa_invert+0x84>
 706:	09 f4       	brne	.+2      	; 0x70a <__ultoa_invert+0x48>
 708:	68 94       	set
 70a:	3f 91       	pop	r19
 70c:	2a e0       	ldi	r18, 0x0A	; 10
 70e:	26 9f       	mul	r18, r22
 710:	11 24       	eor	r1, r1
 712:	30 19       	sub	r19, r0
 714:	30 5d       	subi	r19, 0xD0	; 208
 716:	31 93       	st	Z+, r19
 718:	de f6       	brtc	.-74     	; 0x6d0 <__ultoa_invert+0xe>
 71a:	cf 01       	movw	r24, r30
 71c:	08 95       	ret
 71e:	46 2f       	mov	r20, r22
 720:	47 70       	andi	r20, 0x07	; 7
 722:	40 5d       	subi	r20, 0xD0	; 208
 724:	41 93       	st	Z+, r20
 726:	b3 e0       	ldi	r27, 0x03	; 3
 728:	0f d0       	rcall	.+30     	; 0x748 <__ultoa_invert+0x86>
 72a:	c9 f7       	brne	.-14     	; 0x71e <__ultoa_invert+0x5c>
 72c:	f6 cf       	rjmp	.-20     	; 0x71a <__ultoa_invert+0x58>
 72e:	46 2f       	mov	r20, r22
 730:	4f 70       	andi	r20, 0x0F	; 15
 732:	40 5d       	subi	r20, 0xD0	; 208
 734:	4a 33       	cpi	r20, 0x3A	; 58
 736:	18 f0       	brcs	.+6      	; 0x73e <__ultoa_invert+0x7c>
 738:	49 5d       	subi	r20, 0xD9	; 217
 73a:	31 fd       	sbrc	r19, 1
 73c:	40 52       	subi	r20, 0x20	; 32
 73e:	41 93       	st	Z+, r20
 740:	02 d0       	rcall	.+4      	; 0x746 <__ultoa_invert+0x84>
 742:	a9 f7       	brne	.-22     	; 0x72e <__ultoa_invert+0x6c>
 744:	ea cf       	rjmp	.-44     	; 0x71a <__ultoa_invert+0x58>
 746:	b4 e0       	ldi	r27, 0x04	; 4
 748:	a6 95       	lsr	r26
 74a:	97 95       	ror	r25
 74c:	87 95       	ror	r24
 74e:	77 95       	ror	r23
 750:	67 95       	ror	r22
 752:	ba 95       	dec	r27
 754:	c9 f7       	brne	.-14     	; 0x748 <__ultoa_invert+0x86>
 756:	00 97       	sbiw	r24, 0x00	; 0
 758:	61 05       	cpc	r22, r1
 75a:	71 05       	cpc	r23, r1
 75c:	08 95       	ret
 75e:	9b 01       	movw	r18, r22
 760:	ac 01       	movw	r20, r24
 762:	0a 2e       	mov	r0, r26
 764:	06 94       	lsr	r0
 766:	57 95       	ror	r21
 768:	47 95       	ror	r20
 76a:	37 95       	ror	r19
 76c:	27 95       	ror	r18
 76e:	ba 95       	dec	r27
 770:	c9 f7       	brne	.-14     	; 0x764 <__ultoa_invert+0xa2>
 772:	62 0f       	add	r22, r18
 774:	73 1f       	adc	r23, r19
 776:	84 1f       	adc	r24, r20
 778:	95 1f       	adc	r25, r21
 77a:	a0 1d       	adc	r26, r0
 77c:	08 95       	ret

0000077e <__prologue_saves__>:
 77e:	2f 92       	push	r2
 780:	3f 92       	push	r3
 782:	4f 92       	push	r4
 784:	5f 92       	push	r5
 786:	6f 92       	push	r6
 788:	7f 92       	push	r7
 78a:	8f 92       	push	r8
 78c:	9f 92       	push	r9
 78e:	af 92       	push	r10
 790:	bf 92       	push	r11
 792:	cf 92       	push	r12
 794:	df 92       	push	r13
 796:	ef 92       	push	r14
 798:	ff 92       	push	r15
 79a:	0f 93       	push	r16
 79c:	1f 93       	push	r17
 79e:	cf 93       	push	r28
 7a0:	df 93       	push	r29
 7a2:	cd b7       	in	r28, 0x3d	; 61
 7a4:	de b7       	in	r29, 0x3e	; 62
 7a6:	ca 1b       	sub	r28, r26
 7a8:	db 0b       	sbc	r29, r27
 7aa:	0f b6       	in	r0, 0x3f	; 63
 7ac:	f8 94       	cli
 7ae:	de bf       	out	0x3e, r29	; 62
 7b0:	0f be       	out	0x3f, r0	; 63
 7b2:	cd bf       	out	0x3d, r28	; 61
 7b4:	09 94       	ijmp

000007b6 <__epilogue_restores__>:
 7b6:	2a 88       	ldd	r2, Y+18	; 0x12
 7b8:	39 88       	ldd	r3, Y+17	; 0x11
 7ba:	48 88       	ldd	r4, Y+16	; 0x10
 7bc:	5f 84       	ldd	r5, Y+15	; 0x0f
 7be:	6e 84       	ldd	r6, Y+14	; 0x0e
 7c0:	7d 84       	ldd	r7, Y+13	; 0x0d
 7c2:	8c 84       	ldd	r8, Y+12	; 0x0c
 7c4:	9b 84       	ldd	r9, Y+11	; 0x0b
 7c6:	aa 84       	ldd	r10, Y+10	; 0x0a
 7c8:	b9 84       	ldd	r11, Y+9	; 0x09
 7ca:	c8 84       	ldd	r12, Y+8	; 0x08
 7cc:	df 80       	ldd	r13, Y+7	; 0x07
 7ce:	ee 80       	ldd	r14, Y+6	; 0x06
 7d0:	fd 80       	ldd	r15, Y+5	; 0x05
 7d2:	0c 81       	ldd	r16, Y+4	; 0x04
 7d4:	1b 81       	ldd	r17, Y+3	; 0x03
 7d6:	aa 81       	ldd	r26, Y+2	; 0x02
 7d8:	b9 81       	ldd	r27, Y+1	; 0x01
 7da:	ce 0f       	add	r28, r30
 7dc:	d1 1d       	adc	r29, r1
 7de:	0f b6       	in	r0, 0x3f	; 63
 7e0:	f8 94       	cli
 7e2:	de bf       	out	0x3e, r29	; 62
 7e4:	0f be       	out	0x3f, r0	; 63
 7e6:	cd bf       	out	0x3d, r28	; 61
 7e8:	ed 01       	movw	r28, r26
 7ea:	08 95       	ret

000007ec <_exit>:
 7ec:	f8 94       	cli

000007ee <__stop_program>:
 7ee:	ff cf       	rjmp	.-2      	; 0x7ee <__stop_program>
